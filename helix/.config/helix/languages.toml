[language-server.typos]
command = "typos-lsp"

[[language]]
name = "gleam"
formatter = { command = "gleam", args = ["format", "--stdin"] }
scope = "source.gleam"
file-types = ["gleam"]
language-servers = ["gleam", "typos"]
auto-format = true

[[language]]
name = "go"
formatter = { command = "goimports" }
scope = "source.go"
injection-regex = "go"
file-types = ["go"]
roots = ["Gopkg.toml", "go.mod"]
comment-token = "//"
language-servers = [ "gopls", "typos" ]
indent = { tab-width = 4, unit = "\t" }

[[language]]
name = "nix"
formatter = { command = 'nixfmt' }
language-servers = [ "nixd", "typos" ]
auto-format = true

[language-server.nixd]
command = "nixd"

# Python
[language-server.pyright]
command = "pyright-langserver"
args = ["--stdio"]
config = {  "typeCheckingMode"= "strict",  "reportMissingImports"= true }

[language-server.ruff]
command = "ruff"
args = ["server", "--preview"]

[language-server.ruff.config.settings]
logLevel = "debug"
lineLength = 120

[language-server.ruff.config.settings.lint]
select = ["E4", "E7"]
preview = false

[language-server.ruff.config.settings.format]
preview = true

[[language]]
name = "python"
formatter = { command = "zsh", args = ["-c", """
  ruff check --select I --fix - | ruff format -
  """] }
auto-format = true
language-servers = ["pyright", "ruff", "pylsp", "typos"]

[language-server.pylsp.config.pylsp]
plugins.ruff.enabled = true

# Rust

[[language]]
name = "rust"
auto-format = true
formatter = { command = "rustfmt" }
language-servers = [ "rust-analyzer", "typos" ]

[auto-pairs]
'(' = ')'
'{' = '}'
'[' = ']'
'"' = '"'
'`' = '`'

roots = [
  "Cargo.toml",
  "Cargo.lock"
]

[language-server.rust-analyzer]
command = "rust-analyzer"

[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false



